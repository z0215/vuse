/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const cn: typeof import('./auto-imports/cn')['cn']
  const computed: typeof import('vue')['computed']
  const computedref: typeof import('vue')['computedref']
  const customRef: typeof import('vue')['customRef']
  const customRefref: typeof import('vue')['customRefref']
  const effectScoperef: typeof import('vue')['effectScoperef']
  const getCurrentScoperef: typeof import('vue')['getCurrentScoperef']
  const hasInjectionContextref: typeof import('vue')['hasInjectionContextref']
  const injectref: typeof import('vue')['injectref']
  const isProxyref: typeof import('vue')['isProxyref']
  const isReactiveref: typeof import('vue')['isReactiveref']
  const isReadonlyref: typeof import('vue')['isReadonlyref']
  const isRefref: typeof import('vue')['isRefref']
  const markRawref: typeof import('vue')['markRawref']
  const onActivatedref: typeof import('vue')['onActivatedref']
  const onBeforeMountref: typeof import('vue')['onBeforeMountref']
  const onBeforeUnmountref: typeof import('vue')['onBeforeUnmountref']
  const onBeforeUpdateref: typeof import('vue')['onBeforeUpdateref']
  const onDeactivatedref: typeof import('vue')['onDeactivatedref']
  const onErrorCapturedref: typeof import('vue')['onErrorCapturedref']
  const onMounted: typeof import('vue')['onMounted']
  const onMountedref: typeof import('vue')['onMountedref']
  const onRenderTrackedref: typeof import('vue')['onRenderTrackedref']
  const onRenderTriggeredref: typeof import('vue')['onRenderTriggeredref']
  const onScopeDisposeref: typeof import('vue')['onScopeDisposeref']
  const onServerPrefetchref: typeof import('vue')['onServerPrefetchref']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUnmountedref: typeof import('vue')['onUnmountedref']
  const onUpdatedref: typeof import('vue')['onUpdatedref']
  const onWatcherCleanupref: typeof import('vue')['onWatcherCleanupref']
  const provideref: typeof import('vue')['provideref']
  const reactive: typeof import('vue')['reactive']
  const reactiveref: typeof import('vue')['reactiveref']
  const readonlyref: typeof import('vue')['readonlyref']
  const ref: typeof import('vue')['ref']
  const shallowReactiveref: typeof import('vue')['shallowReactiveref']
  const shallowReadonlyref: typeof import('vue')['shallowReadonlyref']
  const shallowRefref: typeof import('vue')['shallowRefref']
  const toRawref: typeof import('vue')['toRawref']
  const toRefref: typeof import('vue')['toRefref']
  const toRefsref: typeof import('vue')['toRefsref']
  const toValueref: typeof import('vue')['toValueref']
  const triggerRefref: typeof import('vue')['triggerRefref']
  const unref: typeof import('vue')['unref']
  const useAttrsref: typeof import('vue')['useAttrsref']
  const useIdref: typeof import('vue')['useIdref']
  const useModel: typeof import('vue')['useModel']
  const useModelref: typeof import('vue')['useModelref']
  const useSlotsref: typeof import('vue')['useSlotsref']
  const useTemplateRefref: typeof import('vue')['useTemplateRefref']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchEffectref: typeof import('vue')['watchEffectref']
  const watchPostEffectref: typeof import('vue')['watchPostEffectref']
  const watchSyncEffectref: typeof import('vue')['watchSyncEffectref']
  const watchref: typeof import('vue')['watchref']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, MaybeRef, MaybeRefOrGetter, ComputedRef, Ref, HTMLAttributes, CSSProperties } from 'vue'
  import('vue')
}
